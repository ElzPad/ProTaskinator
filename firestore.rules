rules_version = '2';

// users collection
// - any authenticated user can read & create
// - only users who "own/created" a document can update if (user id's match)

// tasks collection
// - any authenticated user can create
// - only users who "own/created" a document can read and update it

// projects collection
// - any authenticated user can read, create & update
// - only users who "own/created" a document can delete it

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{user_id} {
      allow read, create: if request.auth != null;
      allow update: if request.auth.uid == user_id;
    }
    match /tasks/{task_id} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == resource.data.createdBy.uid || (
      exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
      request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.assignedUsers
      );
    }
    match /messages/{message_id} {
      allow create, update, delete: if request.auth.uid == request.resource.data.senderUid;
      allow read: if request.auth.uid == resource.data.receiverUid || request.auth.uid == resource.data.senderUid || (
      resource.data.isGroupChat == true && exists(/databases/$(database)/documents/projects/$(resource.data.receiverUid)) &&
      request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.receiverUid)).data.assignedUsers
      );
    }
    match /projects/{project_id} {
      allow read, create, update: if request.auth != null && resource.data.assignedUsers != null && request.auth.uid in resource.data.assignedUsers;
      allow delete: if request.auth.uid == resource.data.createdBy.id;
    }
  }
}